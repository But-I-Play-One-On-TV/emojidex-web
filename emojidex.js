// Generated by CoffeeScript 1.6.1
(function() {
  var Emojidex;

  Emojidex = (function() {

    Emojidex.prototype.input_target = null;

    Emojidex.prototype.pallet = null;

    function Emojidex(target, options) {
      console.log("Setting up new emojidex object.");
      this.input_target = target;
      this.setup_pallet();
      if (options["default_pallet_switch"]) {
        this.create_default_pallet_switch();
      }
    }

    Emojidex.prototype.setup_pallet = function() {
      this.pallet = $('<div/>', {
        id: 'pallet'
      });
      return this.pallet.html("pppppppppp");
    };

    Emojidex.prototype.create_default_pallet_switch = function() {
      var pallet_switch;
      pallet_switch = $('<button/>', {
        id: 'pallet_switch',
        text: 'e'
      }).insertAfter(this.input_target);
      return this.set_pallet_switch(pallet_switch);
    };

    Emojidex.prototype.set_pallet_switch = function(target) {
      return target.popover({
        trigger: 'click',
        content: this.pallet
      });
    };

    Emojidex.prototype.ProcessOptions = function(options) {
      return console.log("Processing emojidex options");
    };

    return Emojidex;

  })();

  (function($, window) {
    return $.extend($.fn, {
      emojidex: function(options) {
        var settings,
          _this = this;
        this.defaultOptions = {
          inline_editing: false,
          static_pallet: false,
          default_pallet_switch: true
        };
        settings = $.extend({}, this.defaultOptions, options);
        this.each(function(i, el) {
          var $el;
          $el = $(el);
          if (!$.data($el, "plugin_" + 'emojidex')) {
            $.data($el, "plugin_" + 'emojidex', new Emojidex($el, settings));
          }
          return $.data($el, "plugin_" + 'emojidex').ProcessOptions(settings);
        });
        return this;
      }
    });
  })(this.jQuery || this.Zepto, this);

}).call(this);
